#ifndef ___dispatchers
#define ___dispatchers

// This file is autogenerated, based on dispatchers.toml
// Do not edit!


// Lesson learned: do not #define _Container!
#include <iostream>

#include <dispatch_base.h>
#include <water.h>
#include <entity.h>
#include <button.h>
#include <goal.h>
#include <boobytrap.h>

#include <../collisionhandler.h>
#include <../ia_enterhandler.h>
#include <../ia_leavehandler.h>
#include <../killhandler.h>


class IA_EnterDispatch: public Dispatcher<void, Entity*, Entity*>, public IA_EnterHandler {
public:
    int getRule(Entity* __Entity0, Entity* __Entity1);
    
    void doRule(int rulenum, Entity* __Entity0, Entity* __Entity1);

};



class CollisionDispatch: public SymmetricDoubleDispatcher<void, Entity*, Entity*>, public CollisionHandler {
public:
    int getRule(Entity* __Entity0, Entity* __Entity1);
    
    void doRule(int rulenum, Entity* __Entity0, Entity* __Entity1);

};



class KillDispatch: public Dispatcher<void, Entity*>, public KillHandler {
public:
    int getRule(Entity* __Entity0);
    
    void doRule(int rulenum, Entity* __Entity0);

};



class IA_LeaveDispatch: public Dispatcher<void, Entity*, Entity*>, public IA_LeaveHandler {
public:
    int getRule(Entity* __Entity0, Entity* __Entity1);
    
    void doRule(int rulenum, Entity* __Entity0, Entity* __Entity1);

};



#endif
